{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","onUser","onSearch","onFilter","className","type","name","placeholder","onChange","event","target","value","map","title","completed","userId","classNames","TodoList__item","checked","readOnly","button","onClick","BASE_URL","getSelectedUser","fetch","then","response","json","data","CurrentUser","state","email","phone","getUserInfo","props","user","setState","this","prevProps","React","Component","App","todosFromServer","selectedUserId","handleChangingUser","id","handleSearchedValue","filter","todo","includes","handleFilter","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecf4c9db.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, onUser, onSearch, onFilter }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"find your todo\"\n        onChange={event => onSearch(event.target.value)}\n      />\n\n      <select\n        name=\"filter\"\n        onChange={event => onFilter(event.target.value)}\n      >\n        <option value=\"\">All</option>\n        <option value=\"completed\">Completed</option>\n        <option value=\"active\">Active</option>\n      </select>\n\n      <ul className=\"TodoList__list\">\n        {todos.map(({ title, completed, userId }) => (\n          <li\n            className={classNames({\n              TodoList__item: true,\n              'TodoList__item--unchecked': !completed,\n              'TodoList__item--checked': completed,\n            })}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={completed}\n                readOnly={true}\n              />\n              <p>{title}</p>\n            </label>\n\n            <button\n              className={classNames({\n                'TodoList__user-button': true,\n                'TodoList__user-button--selected': !completed,\n                button: true,\n              })}\n              type=\"button\"\n              onClick={() => onUser(userId)}\n            >\n              User&nbsp;#\n              {userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  onUser: PropTypes.func.isRequired,\n  onSearch: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function getTodos() {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getSelectedUser(userId) {\n  return fetch(`${BASE_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(data => data.data);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSelectedUser } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    this.getUserInfo();\n  }\n\n  getUserInfo = () => {\n    getSelectedUser(this.props.userId)\n      .then((user) => {\n        this.setState({\n          name: user.name,\n          email: user.email,\n          phone: user.phone,\n        });\n      });\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n    const { userId, onUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {userId}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n\n        <button\n          type=\"button\"\n          onClick={() => onUser(0)}\n          className=\"button\"\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosFromServer: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => todos.filter(todo => todo.title))\n      .then(todos => (\n        this.setState({\n          todos,\n          todosFromServer: todos,\n        })\n      ));\n  }\n\n  handleChangingUser = (id) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  handleSearchedValue = (value) => {\n    this.setState(state => ({\n      todos: state.todosFromServer.filter(todo => todo.title.includes(value)),\n    }));\n  }\n\n  handleFilter = (value) => {\n    let filter;\n\n    switch (value) {\n      case 'completed':\n        filter = todo => todo.completed === true;\n        break;\n\n      case 'active':\n        filter = todo => todo.completed === false;\n        break;\n\n      default:\n        filter = todo => todo;\n    }\n\n    this.setState(state => ({\n      todos: state.todosFromServer.filter(filter),\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onUser={this.handleChangingUser}\n            onFilter={this.handleFilter}\n            onSearch={this.handleSearchedValue}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onUser={this.handleChangingUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}